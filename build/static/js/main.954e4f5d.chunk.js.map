{"version":3,"sources":["components/AuthUserContext.js","firebase/firebase.js","firebase/auth.js","firebase/db.js","components/styles.js","components/SignOut.js","constants/routes.js","components/Navigation.js","components/Landing.js","components/SignUp.js","components/SignIn.js","components/PasswordForget.js","components/withAuthorization.js","components/Home.js","components/PasswordChange.js","components/Account.js","components/App.js","components/withAuthentication.js","serviceWorker.js","index.js"],"names":["AuthUserContext","React","createContext","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","database","auth","doCreateUserWithEmailAndPassword","email","password","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","doCreateUser","id","username","ref","concat","set","onceGetUsers","once","TopBar","styled","div","_templateObject","ParentList","_templateObject2","CenterContainer","_templateObject3","Button","button","_templateObject4","MainBody","_templateObject5","BoxText","p","_templateObject6","Content","_templateObject7","InputBox","input","_templateObject8","AdditionalFormData","_templateObject9","SignOutButton","react_default","a","createElement","type","onClick","HOME","NavigationAuth","Link","to","routes","SignOut","NavigationNonAuth","Navigation","components_AuthUserContext","Consumer","authUser","Navigation_NavigationAuth","Navigation_NavigationNonAuth","LandingPage","INITIAL_STATE","passwordOne","passwordTwo","error","byPropKey","propertyName","value","Object","defineProperty","SignUpForm","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","event","_this$state","state","history","then","user","uid","setState","objectSpread","push","catch","preventDefault","_this2","_this$state2","isInvalid","onChange","target","placeholder","disabled","Component","SignUp","withRouter","_ref","SignUp_SignUpForm","SignInForm","message","SignIn","SignIn_SignInForm","PasswordForgetForm","PasswordForget","PasswordForget_PasswordForgetForm","withAuthorization","authCondition","WithAuthorization","_React$Component","apply","arguments","inherits","createClass","key","onAuthStateChanged","HomePage","users","snapshot","val","Home_UserList","UserList","keys","map","PasswordChangeForm","PasswordChange","withAuthentication","WithAuthentication","Provider","BrowserRouter","components_Navigation","Route","exact","path","component","SignUpPage","SignInPage","PasswordForgetPage","AccountPage","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.954e4f5d.chunk.js","sourcesContent":["import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: \"AIzaSyCs1z0RAk_4VBe5gE26fopXbz0fBy41WdQ\",\n  authDomain: \"loginmodule-2233b.firebaseapp.com\",\n  databaseURL: \"https://loginmodule-2233b.firebaseio.com\",\n  projectId: \"loginmodule-2233b\",\n  storageBucket: \"loginmodule-2233b.appspot.com\",\n  messagingSenderId: \"503008658723\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\nconst db = firebase.database();\n\nconst auth = firebase.auth();\n\nexport {\n  db,\n  auth,\n};\n","import { auth } from './firebase';\n\n// Sign Up\nexport const doCreateUserWithEmailAndPassword = (email, password) =>\n  auth.createUserWithEmailAndPassword(email, password);\n\n// Sign In\nexport const doSignInWithEmailAndPassword = (email, password) =>\n  auth.signInWithEmailAndPassword(email, password);\n\n// Sign out\nexport const doSignOut = () =>\n  auth.signOut();\n\n// Password Reset\nexport const doPasswordReset = (email) =>\n  auth.sendPasswordResetEmail(email);\n\n// Password Change\nexport const doPasswordUpdate = (password) =>\n  auth.currentUser.updatePassword(password);\n","import { db } from './firebase';\n\n// User API\n\nexport const doCreateUser = (id, username, email) =>\n  db.ref(`users/${id}`).set({\n    username,\n    email,\n  });\n\nexport const onceGetUsers = () =>\n  db.ref('users').once('value');\n\n// Other Entity APIs ...\n","import styled from 'styled-components'\n\nexport const TopBar = styled.div`\n  border-bottom: 2px solid palevioletred;\n  box-shadow: 0px 11px 35px 2px rgba(0, 0, 0, 0.14);\n`;\n\nexport const ParentList= styled.div`\n  display: flex;\n  align-items: stretch;\n  text-decoration: none;\n  color: #FFFFFF;\n  div {\n    margin-top: 10px;\n    text-align: center;\n    font-size: 30px;\n    text-decoration: none;\n    flex-grow: 1;\n    a {\n      color: #FFFFFF;\n      text-decoration: none;\n    }\n    Button {\n      background: #ee9ca7;  /* fallback for old browsers */\n      background: -webkit-linear-gradient(to right, #ffdde1, #ee9ca7);  /* Chrome 10-25, Safari 5.1-6 */\n      background: linear-gradient(to right, #ffdde1, #ee9ca7); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n      color: #8C55AA;\n      a {\n        text-decoration: none;\n        color: #8C55AA;\n        font-size: 18px;\n        font-weight: bold;\n      }\n    }\n  }\n`;\n\nexport const CenterContainer = styled.div`\n  background-color: #FFFFFF;\n  width: 400px;\n  height: auto;\n  padding-bottom: 30px;\n  margin: 7em auto;\n  border-radius: 1.5em;\n  text-align: center;\n  box-shadow: 0px 11px 35px 2px rgba(0, 0, 0, 0.14);\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  border-radius: 5em;\n  color: #fff;\n  background: linear-gradient(to right, #9C27B0, #E040FB);\n  border: 0;\n  padding-left: 40px;\n  padding-right: 40px;\n  padding-bottom: 10px;\n  padding-top: 10px;\n  font-family: 'Ubuntu', sans-serif;\n  font-size: 13px;\n  box-shadow: 0 0 20px 1px rgba(0, 0, 0, 0.04);\n  margin-bottom: 10px;\n  outline: none;\n`;\n\nexport const MainBody = styled.div`\n  background: #ED213A;  /* fallback for old browsers */\n  background: -webkit-linear-gradient(to right, #93291E, #ED213A);  /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(to right, #93291E, #ED213A); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n  position:fixed;\n  padding:0;\n  margin:0;\n  top:0;\n  left:0;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const BoxText = styled.p`\n  padding-top: 40px;\n  color: #8C55AA;\n  font-weight: bold;\n  font-size: 23px;\n  text-align: center;\n`;\n\nexport const Content = styled.p`\n  color: #FFFFFF;\n  padding-top: 40px;\n  font-size: 23px;\n  text-align: center;\n`;\n\nexport const InputBox = styled.input`\n  width: 76%;\n  color: rgb(38, 50, 56);\n  font-weight: 700;\n  font-size: 14px;\n  letter-spacing: 1px;\n  background: rgba(136, 126, 126, 0.04);\n  padding: 10px 20px;\n  border: none;\n  border-radius: 20px;\n  outline: none;\n  box-sizing: border-box;\n  border: 2px solid rgba(0, 0, 0, 0.02);\n  margin-bottom: 50px;\n  text-align: center;\n  margin-bottom: 27px;\n  :focus {\n    border: 2px solid rgba(0, 0, 0, 0.18) !important;\n  }\n`;\n\nexport const AdditionalFormData = styled.p`\n  text-align: center;\n  a {\n    text-decoration: none;\n    color: #E1BEE7;\n  }\n`;\n","import React from 'react';\n\nimport { auth } from '../firebase';\nimport { Button } from './styles';\nconst SignOutButton = () =>\n  <Button\n    type=\"button\"\n    onClick={auth.doSignOut}\n  >\n    Sign Out\n  </Button>\n\nexport default SignOutButton;\n","export const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const LANDING = '/';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const PASSWORD_FORGET = '/pw-forget';\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthUserContext from './AuthUserContext';\n\nimport SignOutButton from './SignOut';\nimport * as routes from '../constants/routes';\nimport { ParentList, Button } from './styles';\n\nconst Navigation = () =>\n  <AuthUserContext.Consumer>\n    {authUser => authUser\n      ? <NavigationAuth />\n      : <NavigationNonAuth />\n    }\n  </AuthUserContext.Consumer>\n\nconst NavigationAuth = () =>\n  <ParentList>\n    <div><Link to={routes.LANDING}>Landing Page</Link></div>\n    <div><Link to={routes.HOME}>Home</Link></div>\n    <div><Link to={routes.ACCOUNT}>Account</Link></div>\n    <div><SignOutButton /></div>\n  </ParentList>\n\nconst NavigationNonAuth = () =>\n  <ParentList>\n    <div><Link to={routes.LANDING}>Landing Page</Link></div>\n    <div> Hacktober </div>\n    <div><Button><Link to={routes.SIGN_IN}>Sign In</Link></Button></div>\n  </ParentList>\n\nexport default Navigation;\n","import React from 'react';\nimport { Content } from './styles';\nconst LandingPage = () =>\n  <div>\n    <Content>Landing Page of Hacktober</Content>\n    <Content> This page will be accessible by all </Content>\n  </div>\n\nexport default LandingPage;\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { auth, db } from '../firebase';\nimport * as routes from '../constants/routes';\nimport { CenterContainer, Button, BoxText, InputBox, AdditionalFormData } from './styles';\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nconst SignUpPage = ({history}) =>\n  <CenterContainer>\n    <BoxText>SignUp</BoxText>\n    <SignUpForm history={history}/>\n  </CenterContainer>\n\n\nconst byPropKey = (propertyName, value) => () => ({\n  [propertyName]: value,\n});\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const {\n      username,\n      email,\n      passwordOne,\n    } = this.state;\n    const {\n      history,\n    } = this.props;\n\n\n    auth.doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your own accessible Firebase Database too\n        db.doCreateUser(authUser.user.uid, username, email)\n          .then(() => {\n            this.setState({ ...INITIAL_STATE });\n            history.push(routes.HOME);\n          })\n          .catch(error => {\n            this.setState(byPropKey('error', error));\n          });\n\n      })\n      .catch(error => {\n        this.setState(byPropKey('error', error));\n      });\n\n    event.preventDefault();\n  }\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n    } = this.state;\n\n\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n      <InputBox\n        value={username}\n        onChange={event => this.setState(byPropKey('username', event.target.value))}\n        type=\"text\"\n        placeholder=\"Full Name\"\n      />\n      <InputBox\n        value={email}\n        onChange={event => this.setState(byPropKey('email', event.target.value))}\n        type=\"text\"\n        placeholder=\"Email Address\"\n      />\n      <InputBox\n        value={passwordOne}\n        onChange={event => this.setState(byPropKey('passwordOne', event.target.value))}\n        type=\"password\"\n        placeholder=\"Password\"\n      />\n      <InputBox\n        value={passwordTwo}\n        onChange={event => this.setState(byPropKey('passwordTwo', event.target.value))}\n        type=\"password\"\n        placeholder=\"Confirm Password\"\n      />\n      <Button disabled={isInvalid} type=\"submit\">\n        Sign Up\n      </Button>\n\n      </form>\n    );\n  }\n}\n\n  export default withRouter(SignUpPage);\n\nexport {\n  SignUpForm,\n};\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nimport { SignUpLink } from './SignUp';\n\nimport { auth } from '../firebase';\nimport * as routes from '../constants/routes';\nimport { CenterContainer, Button, BoxText, InputBox, AdditionalFormData } from './styles';\n\nconst SignInPage = ({ history }) =>\n  <CenterContainer>\n    <BoxText>SignIn</BoxText>\n    <SignInForm history={history} />\n    <AdditionalFormData>\n      <Link to={routes.PASSWORD_FORGET}>\n        Forgot Password?\n        </Link>\n    </AdditionalFormData>\n    <AdditionalFormData>\n      <Link to={routes.SIGN_UP}>\n        SignUp\n      </Link>\n    </AdditionalFormData>\n  </CenterContainer>\n\nconst byPropKey = (propertyName, value) => () => ({\n  [propertyName]: value,\n});\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const {\n      email,\n      password,\n    } = this.state;\n\n    const {\n      history,\n    } = this.props;\n\n    auth.doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        history.push(routes.HOME);\n      })\n      .catch(error => {\n        this.setState(byPropKey('error', error));\n      });\n\n    event.preventDefault();\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      password === '' ||\n      email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <InputBox\n          value={email}\n          onChange={event => this.setState(byPropKey('email', event.target.value))}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <InputBox\n          value={password}\n          onChange={event => this.setState(byPropKey('password', event.target.value))}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <Button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </Button>\n\n        { error && <p>{error.message}</p> }\n      </form>\n    );\n  }\n}\n\nexport default withRouter(SignInPage);\n\nexport {\n  SignInForm,\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { auth } from '../firebase';\nimport * as routes from '../constants/routes';\nimport { CenterContainer, Button, BoxText, InputBox, AdditionalFormData } from './styles';\n\nconst PasswordForgetPage = () =>\n  <CenterContainer>\n    <BoxText>PasswordForget</BoxText>\n    <PasswordForgetForm />\n  </CenterContainer>\n\nconst byPropKey = (propertyName, value) => () => ({\n  [propertyName]: value,\n});\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const { email } = this.state;\n\n    auth.doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState(byPropKey('error', error));\n      });\n\n    event.preventDefault();\n  }\n\n  render() {\n    const {\n      email,\n      error,\n    } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <InputBox\n          value={this.state.email}\n          onChange={event => this.setState(byPropKey('email', event.target.value))}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <Button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </Button>\n        { error && <p>{error.message}</p> }\n      </form>\n    );\n  }\n}\n\n\n\nexport default PasswordForgetPage;\n\nexport {\n  PasswordForgetForm,\n};\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport AuthUserContext from './AuthUserContext';\nimport { firebase } from '../firebase';\nimport * as routes from '../constants/routes';\n\nconst withAuthorization = (authCondition) => (Component) => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      firebase.auth.onAuthStateChanged(authUser => {\n        if (!authCondition(authUser)) {\n          this.props.history.push(routes.SIGN_IN);\n        }\n      });\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser => authUser ? <Component {...this.props} /> : null}\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return withRouter(WithAuthorization);\n}\n\nexport default withAuthorization;\n","import React, { Component } from 'react';\n\nimport withAuthorization from './withAuthorization';\nimport { db } from '../firebase';\nimport { CenterContainer, Button, BoxText, InputBox, Content, AdditionalFormData } from './styles';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      users: null,\n    };\n  }\n\n  componentDidMount() {\n    db.onceGetUsers().then(snapshot =>\n      this.setState({ users: snapshot.val() })\n    );\n  }\n\n  render() {\n    const { users } = this.state;\n    return (\n      <div>\n        <Content>Home</Content>\n        <Content>The Home Page is accessible by every signed in user.</Content>\n        { !!users && <UserList users={users} /> }\n\n      </div>\n    );\n  }\n}\n\nconst UserList = ({ users }) =>\n  <div>\n    <h2>List of Usernames of Users</h2>\n    <p>(Saved on Sign Up in Firebase Database)</p>\n\n    {Object.keys(users).map(key =>\n      <div key={key}>{users[key].username}</div>\n    )}\n  </div>\n\nconst authCondition = (authUser) => !!authUser;\n\nexport default withAuthorization(authCondition)(HomePage);\n","import React, { Component } from 'react';\n\nimport { auth } from '../firebase';\nimport { CenterContainer, Button, BoxText, InputBox, AdditionalFormData } from './styles';\n\nconst byPropKey = (propertyName, value) => () => ({\n  [propertyName]: value,\n});\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const { passwordOne } = this.state;\n\n    auth.doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState(byPropKey('error', error));\n      });\n\n    event.preventDefault();\n  }\n\n  render() {\n    const {\n      passwordOne,\n      passwordTwo,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <InputBox\n          value={passwordOne}\n          onChange={event => this.setState(byPropKey('passwordOne', event.target.value))}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <InputBox\n          value={passwordTwo}\n          onChange={event => this.setState(byPropKey('passwordTwo', event.target.value))}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <Button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </Button>\n\n        { error && <p>{error.message}</p> }\n      </form>\n    );\n  }\n}\n\nexport default PasswordChangeForm;\n","import React from 'react';\n\nimport AuthUserContext from './AuthUserContext';\nimport { PasswordForgetForm } from './PasswordForget';\nimport PasswordChangeForm from './PasswordChange';\nimport withAuthorization from './withAuthorization';\nimport { CenterContainer, BoxText } from './styles';\n\nconst AccountPage = () =>\n  <AuthUserContext.Consumer>\n    {authUser =>\n      <CenterContainer>\n        <BoxText>Account: {authUser.email}</BoxText>\n        <PasswordChangeForm />\n      </CenterContainer>\n    }\n  </AuthUserContext.Consumer>\n\nconst authCondition = (authUser) => !!authUser;\n\nexport default withAuthorization(authCondition)(AccountPage);\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n} from 'react-router-dom';\n\nimport Navigation from './Navigation';\nimport LandingPage from './Landing';\nimport SignUpPage from './SignUp';\nimport SignInPage from './SignIn';\nimport PasswordForgetPage from './PasswordForget';\nimport HomePage from './Home';\nimport AccountPage from './Account';\nimport { TopBar, MainBody } from './styles'\n\nimport * as routes from '../constants/routes';\n\nimport withAuthentication from './withAuthentication';\n\n\nconst App = () =>\n  <Router>\n    <MainBody>\n      <TopBar>\n      <Navigation />\n      </TopBar>\n      <Route exact path={routes.LANDING} component={LandingPage} />\n      <Route exact path={routes.SIGN_UP} component={SignUpPage} />\n      <Route exact path={routes.SIGN_IN} component={SignInPage} />\n      <Route exact path={routes.PASSWORD_FORGET} component={PasswordForgetPage} />\n      <Route exact path={routes.HOME} component={HomePage} />\n      <Route exact path={routes.ACCOUNT} component={AccountPage} />\n    </MainBody>\n  </Router>\n\nexport default withAuthentication(App);\n","import React from 'react';\nimport AuthUserContext from './AuthUserContext';\n\nimport { firebase } from '../firebase';\n\nconst withAuthentication = (Component) =>\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: null,\n      };\n    }\n\n    componentDidMount() {\n      firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      });\n    }\n\n    render() {\n      const { authUser } = this.state;\n\n      return (\n        <AuthUserContext.Provider value={authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>      );\n    }\n  }\n\nexport default withAuthentication;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}